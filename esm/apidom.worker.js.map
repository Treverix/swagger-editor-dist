{"version":3,"file":"apidom.worker.js","mappings":"6JACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,6DCElF,MAAM,EAFEI,KAAO,IAAIC,EAAI,CAAC,EAAgC,OAA7Bf,EAAoBgB,EAAED,EAAGD,GAAWC,CAAC,EAE3BA,CAAE,CAAE,WAAgB,IAAME,EAAkFC,aCAjJ,MAAM,EAA+BC,ECArC,MAAM,EAA+BC,ECE9B,MAAMC,EAWXC,YAAYC,EAAKC,GACfC,KAAKC,KAAOH,EACZE,KAAKE,YAAcH,EACnBC,KAAKG,iBAAmBC,EAAAA,mBAA4BJ,KAAKH,YAAYQ,cACvE,CAEAC,mBAAmBC,GACjB,MAAMC,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBO,aAAaF,GAFjC,EAGX,CAEAF,iBAAiBC,EAAKI,GACpB,MAAMH,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBS,aAAaJ,EAAUG,GAF3C,EAGX,CAEAL,cAAcC,EAAKI,GACjB,MAAMH,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBU,QAAQL,EAAUG,GAFtC,EAGX,CAEAL,cAAcC,GACZ,MAAMC,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBW,QAAQN,GAF5B,EAGX,CAEAF,0BAA0BC,GACxB,MAAMC,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBY,sBAAsBP,GAF1C,EAGX,CAEAF,wBAAwBC,EAAKI,GAC3B,MAAMH,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBa,oBAAoBR,EAAU,CACzDD,MACAI,aAJO,EAMX,CAEAL,oBAAoBC,EAAKU,GACvB,MAAMT,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBe,cAAcV,EAAUS,GAF5C,EAGX,CAEAX,yBAAyBC,GACvB,MAAMC,EAAWR,KAAKS,iBAAiBF,GACvC,OAAKC,EAGER,KAAKG,iBAAiBgB,sBAAsBX,GAF1C,EAGX,CAEAF,gCACE,OAAON,KAAKG,iBAAiBiB,yBAC/B,CAEAX,iBAAiBF,GACf,MAAMc,EAASrB,KAAKC,KAAKqB,kBAAkB,GAY3C,OAAOC,EAAAA,aAAAA,OACLhB,EACAP,KAAKE,YAAYsB,WACjBH,EAAOI,WACPJ,EAAOK,WAEX,EA3GW9B,EACJS,cAAgB,CACrBsB,mBAAoB,GACpBC,oBAAqB,GACrBC,iBAAiB,EACjBC,SAAU1B,EAAAA,SAAAA,KACV2B,uBAAwB,CACtBC,UAAW,aAuGV,MAAMC,EAAcC,GAAc,CAACpC,EAAKC,KAC7C,IAAIoC,EAAoBD,EAExB,GAAInC,EAAWqC,iBACb,GAAwC,qBAA7BC,WAAWC,cAEpBC,QAAQC,KACN,oHAEG,CACDC,MAAMC,QAAQ3C,EAAWqC,kBAC3BC,WAAWC,iBAAiBvC,EAAWqC,kBAEvCC,WAAWC,cAAcvC,EAAWqC,kBAGtC,MAAQO,0BAA2BC,GAAsBP,WACzD,GAAiC,oBAAtBO,EACT,MAAM,IAAIC,MACP,iBAAgB9C,EAAWqC,yEAIhCD,EAAoBS,EAAkBT,EAAmB,CACvD/B,SAAQ,EACRmB,iCACF,GACF,CAGF,OAAO,IAAIY,EAAkBrC,EAAKC,EAAW,EC5IzC+C,EAASb,EAAWrC,GAE1ByC,WAAWU,UAAY,MACrBtD,EAAAA,EAAAA,aAAW,CAACK,EAAKC,IACR+C,EAAOhD,EAAKC,IACnB,E","sources":["../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../external module \"monaco-editor/esm/vs/editor/editor.worker.js\"","../external module \"vscode-languageserver-textdocument\"","../external module \"@swagger-api/apidom-ls\"","plugins/editor-monaco/workers/apidom/ApiDOMWorker.js","plugins/editor-monaco/workers/apidom/apidom.worker.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"initialize\"]: () => __WEBPACK_EXTERNAL_MODULE_monaco_editor_esm_vs_editor_editor_worker_js_87e2e091__.initialize });","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_MODULE_vscode_languageserver_textdocument_4dc2f5d8__;","var x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\nvar y = x => () => x\nconst __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ls_1047a2a9__;","/* eslint-disable no-underscore-dangle */\nimport * as vscodeLanguageServerTextDocument from 'vscode-languageserver-textdocument'; // this is true source\nimport * as apidomLS from '@swagger-api/apidom-ls';\n\nexport class ApiDOMWorker {\n  static apiDOMContext = {\n    validatorProviders: [],\n    completionProviders: [],\n    performanceLogs: false,\n    logLevel: apidomLS.LogLevel.WARN,\n    defaultLanguageContent: {\n      namespace: 'asyncapi',\n    },\n  };\n\n  constructor(ctx, createData) {\n    this._ctx = ctx;\n    this._createData = createData;\n    this._languageService = apidomLS.getLanguageService(this.constructor.apiDOMContext);\n  }\n\n  async doValidation(uri) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doValidation(document);\n  }\n\n  async doComplete(uri, position) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doCompletion(document, position);\n  }\n\n  async doHover(uri, position) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doHover(document, position);\n  }\n\n  async doLinks(uri) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doLinks(document);\n  }\n\n  async findDocumentSymbols(uri) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doFindDocumentSymbols(document);\n  }\n\n  async provideDefinition(uri, position) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doProvideDefinition(document, {\n      uri,\n      position,\n    });\n  }\n\n  async doCodeActions(uri, diagnostics) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.doCodeActions(document, diagnostics);\n  }\n\n  async findSemanticTokens(uri) {\n    const document = this._getTextDocument(uri);\n    if (!document) {\n      return [];\n    }\n    return this._languageService.computeSemanticTokens(document);\n  }\n\n  async getSemanticTokensLegend() {\n    return this._languageService.getSemanticTokensLegend();\n  }\n\n  _getTextDocument(uri) {\n    const models = this._ctx.getMirrorModels()[0];\n    /**\n     * When there are multiple files open, this will be an array\n     * expect models: _lines[], _uri, _versionId\n     * expect models.uri.toString() to be singular, e.g. inmemory://model/1\n     * thus, before returning a TextDocument, we can optionally\n     * validate that models.uri.toString() === uri\n     * fyi, reference more complete example in cssWorker\n     * https://github.com/microsoft/monaco-css/blob/master/src/cssWorker.ts\n     * which we might want later to handle multiple URIs.\n     */\n\n    return vscodeLanguageServerTextDocument.TextDocument.create(\n      uri,\n      this._createData.languageId,\n      models._versionId,\n      models.getValue()\n    );\n  }\n}\n\nexport const makeCreate = (BaseClass) => (ctx, createData) => {\n  let ApiDOMWorkerClass = BaseClass;\n\n  if (createData.customWorkerPath) {\n    if (typeof globalThis.importScripts === 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Monaco is not using webworkers for background tasks, and that is needed to support the customWorkerPath flag'\n      );\n    } else {\n      if (Array.isArray(createData.customWorkerPath)) {\n        globalThis.importScripts(...createData.customWorkerPath);\n      } else {\n        globalThis.importScripts(createData.customWorkerPath);\n      }\n\n      const { customApiDOMWorkerFactory: workerFactoryFunc } = globalThis;\n      if (typeof workerFactoryFunc !== 'function') {\n        throw new Error(\n          `The script at ${createData.customWorkerPath} does not add customApiDOMWorkerFactory to globalThis`\n        );\n      }\n\n      ApiDOMWorkerClass = workerFactoryFunc(ApiDOMWorkerClass, {\n        apidomLS,\n        vscodeLanguageServerTextDocument,\n      });\n    }\n  }\n\n  return new ApiDOMWorkerClass(ctx, createData);\n};\n","import { initialize } from 'monaco-editor/esm/vs/editor/editor.worker.js';\n\nimport { makeCreate, ApiDOMWorker } from './ApiDOMWorker.js';\n\nconst create = makeCreate(ApiDOMWorker);\n\nglobalThis.onmessage = () => {\n  initialize((ctx, createData) => {\n    return create(ctx, createData);\n  });\n};\n\nexport { initialize, create, makeCreate, ApiDOMWorker };\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","x","d","__WEBPACK_EXTERNAL_MODULE_monaco_editor_esm_vs_editor_editor_worker_js_87e2e091__","initialize","__WEBPACK_EXTERNAL_MODULE_vscode_languageserver_textdocument_4dc2f5d8__","__WEBPACK_EXTERNAL_MODULE__swagger_api_apidom_ls_1047a2a9__","ApiDOMWorker","constructor","ctx","createData","this","_ctx","_createData","_languageService","apidomLS","apiDOMContext","async","uri","document","_getTextDocument","doValidation","position","doCompletion","doHover","doLinks","doFindDocumentSymbols","doProvideDefinition","diagnostics","doCodeActions","computeSemanticTokens","getSemanticTokensLegend","models","getMirrorModels","vscodeLanguageServerTextDocument","languageId","_versionId","getValue","validatorProviders","completionProviders","performanceLogs","logLevel","defaultLanguageContent","namespace","makeCreate","BaseClass","ApiDOMWorkerClass","customWorkerPath","globalThis","importScripts","console","warn","Array","isArray","customApiDOMWorkerFactory","workerFactoryFunc","Error","create","onmessage"],"sourceRoot":""}